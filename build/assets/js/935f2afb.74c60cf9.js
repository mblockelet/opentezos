"use strict";(self.webpackChunkopentezos=self.webpackChunkopentezos||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Welcome","items":[{"type":"link","label":"Modules","href":"/","docId":"welcome/modules"},{"type":"link","label":"Paths","href":"/paths","docId":"welcome/paths"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Blockchain Basics","items":[{"type":"link","label":"Introduction","href":"/blockchain-basics","docId":"blockchain-basics/introduction"},{"type":"link","label":"Main properties of the first \\"blockchain\\"","href":"/blockchain-basics/main-properties","docId":"blockchain-basics/main-properties"},{"type":"link","label":"Proof-of-work","href":"/blockchain-basics/proof-of-work","docId":"blockchain-basics/proof-of-work"},{"type":"link","label":"Introduction to other consensus algorithms","href":"/blockchain-basics/other-consensuses","docId":"blockchain-basics/other-consensuses"},{"type":"link","label":"Smart Contracts","href":"/blockchain-basics/smart-contracts","docId":"blockchain-basics/smart-contracts"},{"type":"link","label":"Exam","href":"/blockchain-basics/exam","docId":"blockchain-basics/exam"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Tezos Basics","items":[{"type":"link","label":"Introduction","href":"/tezos-basics","docId":"tezos-basics/introduction"},{"type":"link","label":"Smart contracts","href":"/tezos-basics/smart-contracts","docId":"tezos-basics/smart-contracts"},{"type":"link","label":"Liquid Proof-of-Stake","href":"/tezos-basics/liquid-proof-of-stake","docId":"tezos-basics/liquid-proof-of-stake"},{"type":"link","label":"Operations","href":"/tezos-basics/operations","docId":"tezos-basics/operations"},{"type":"link","label":"CLI and RPC","href":"/tezos-basics/cli-and-rpc","docId":"tezos-basics/cli-and-rpc"},{"type":"link","label":"Governance on-chain","href":"/tezos-basics/governance-on-chain","docId":"tezos-basics/governance-on-chain"},{"type":"link","label":"Voting","href":"/tezos-basics/voting","docId":"tezos-basics/voting"},{"type":"link","label":"History of amendments","href":"/tezos-basics/history-of-amendments","docId":"tezos-basics/history-of-amendments"},{"type":"link","label":"Economics and rewards","href":"/tezos-basics/economics-and-rewards","docId":"tezos-basics/economics-and-rewards"},{"type":"link","label":"Exam","href":"/tezos-basics/exam","docId":"tezos-basics/exam"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Deploy a node","items":[{"type":"link","label":"Introduction","href":"/deploy-a-node","docId":"deploy-a-node/introduction"},{"type":"link","label":"Installation","href":"/deploy-a-node/installation","docId":"deploy-a-node/installation"},{"type":"link","label":"Set-up a node","href":"/deploy-a-node/set-up-a-node","docId":"deploy-a-node/set-up-a-node"},{"type":"link","label":"What about networks?","href":"/deploy-a-node/networks","docId":"deploy-a-node/networks"},{"type":"link","label":"To go further","href":"/deploy-a-node/to-go-further","docId":"deploy-a-node/to-go-further"},{"type":"link","label":"Exam","href":"/deploy-a-node/exam","docId":"deploy-a-node/exam"}],"collapsible":true,"collapsed":true},{"type":"category","label":"How to use an Explorer","items":[{"type":"link","label":"Introduction","href":"/explorer","docId":"explorer/introduction"},{"type":"link","label":"How Indexers Work?","href":"/explorer/indexer-explained","docId":"explorer/indexer-explained"},{"type":"link","label":"Available Tezos Explorers","href":"/explorer/available-tezos-indexers","docId":"explorer/available-tezos-indexers"},{"type":"link","label":"How to use the tzStats blockchain explorer?","href":"/explorer/tzstats-main-features","docId":"explorer/tzstats-main-features"},{"type":"link","label":"Checkout your smart contract on TzStats","href":"/explorer/tzstats-smart-contract","docId":"explorer/tzstats-smart-contract"},{"type":"link","label":"Private indexer","href":"/explorer/private-indexer","docId":"explorer/private-indexer"},{"type":"link","label":"Exam","href":"/explorer/exam","docId":"explorer/exam"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Archetype","items":[{"type":"link","label":"Introduction","href":"/archetype","docId":"archetype/introduction"},{"type":"link","label":"Completium","href":"/archetype/completium","docId":"archetype/completium"},{"type":"category","label":"Raffle example","items":[{"type":"link","label":"Raffle contract","href":"/archetype/raffle-example/raffle-contract","docId":"archetype/raffle-example/raffle-contract"},{"type":"link","label":"Testing","href":"/archetype/raffle-example/unit-test","docId":"archetype/raffle-example/unit-test"}],"collapsible":true,"collapsed":true},{"type":"link","label":"Contract Templates","href":"/archetype/examples","docId":"archetype/examples"}],"collapsible":true,"collapsed":true},{"type":"category","label":"SmartPy","items":[{"type":"link","label":"Introduction","href":"/smartpy","docId":"smartpy/introduction"},{"type":"link","label":"Installation","href":"/smartpy/installation","docId":"smartpy/installation"},{"type":"link","label":"Smart contract development with SmartPy","href":"/smartpy/write-contract-smartpy","docId":"smartpy/write-contract-smartpy"},{"type":"link","label":"Exam","href":"/smartpy/exam","docId":"smartpy/exam"}],"collapsible":true,"collapsed":true},{"type":"category","label":"LIGO","items":[{"type":"link","label":"Introduction","href":"/ligo","docId":"ligo/introduction"},{"type":"link","label":"Installation","href":"/ligo/installation","docId":"ligo/installation"},{"type":"category","label":"Raffle example","items":[{"type":"link","label":"Raffle contract","href":"/ligo/write-contract-ligo/1-raffle-contract","docId":"ligo/write-contract-ligo/1-raffle-contract"},{"type":"link","label":"Launch raffle","href":"/ligo/write-contract-ligo/2-launch-raffle","docId":"ligo/write-contract-ligo/2-launch-raffle"},{"type":"link","label":"Buy ticket","href":"/ligo/write-contract-ligo/3-buy-ticket","docId":"ligo/write-contract-ligo/3-buy-ticket"},{"type":"link","label":"Close raffle","href":"/ligo/write-contract-ligo/4-close-raffle","docId":"ligo/write-contract-ligo/4-close-raffle"},{"type":"link","label":"Refactoring","href":"/ligo/write-contract-ligo/5-refactoring","docId":"ligo/write-contract-ligo/5-refactoring"}],"collapsible":true,"collapsed":true},{"type":"link","label":"Compiling and deploying","href":"/ligo/deploy-a-contract","docId":"ligo/deploy-a-contract"},{"type":"link","label":"Unit Testing with PyTezos","href":"/ligo/unit-testing","docId":"ligo/unit-testing"},{"type":"link","label":"More examples","href":"/ligo/examples","docId":"ligo/examples"},{"type":"link","label":"Exam","href":"/ligo/exam","docId":"ligo/exam"},{"type":"link","label":"Take Away","href":"/ligo/take-away","docId":"ligo/take-away"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Michelson","items":[{"type":"link","label":"Introduction","href":"/michelson","docId":"michelson/introduction"},{"type":"link","label":"Smart Contracts","href":"/michelson/smart-contracts","docId":"michelson/smart-contracts"},{"type":"link","label":"Tutorial","href":"/michelson/tutorial","docId":"michelson/tutorial"},{"type":"link","label":"Examples","href":"/michelson/examples","docId":"michelson/examples"},{"type":"link","label":"Instructions Reference","href":"/michelson/instructions-reference","docId":"michelson/instructions-reference"},{"type":"link","label":"Exam","href":"/michelson/exam","docId":"michelson/exam"},{"type":"link","label":"Take away","href":"/michelson/take-away","docId":"michelson/take-away"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Build a Dapp","items":[{"type":"link","label":"Introduction","href":"/dapp","docId":"dapp/introduction"},{"type":"link","label":"Deploy with Truffle","href":"/dapp/truffle_compilation_migration","docId":"dapp/truffle_compilation_migration"},{"type":"link","label":"Taquito","href":"/dapp/taquito","docId":"dapp/taquito"},{"type":"link","label":"Temple Wallet","href":"/dapp/temple","docId":"dapp/temple"},{"type":"link","label":"Frontend (Basics)","href":"/dapp/basics","docId":"dapp/basics"},{"type":"link","label":"Frontend (Advanced)","href":"/dapp/front_user_experience","docId":"dapp/front_user_experience"},{"type":"link","label":"Exam","href":"/dapp/exam","docId":"dapp/exam"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Baking","items":[{"type":"link","label":"Introduction","href":"/baking","docId":"baking/introduction"},{"type":"link","label":"How baking works?","href":"/baking/baking_explained","docId":"baking/baking_explained"},{"type":"link","label":"Rewards","href":"/baking/reward","docId":"baking/reward"},{"type":"link","label":"Delegating","href":"/baking/delegating","docId":"baking/delegating"},{"type":"link","label":"List of bakers","href":"/baking/bakers_list","docId":"baking/bakers_list"},{"type":"link","label":"CLI to become a baker","href":"/baking/cli-baker","docId":"baking/cli-baker"},{"type":"link","label":"Exam","href":"/baking/exam","docId":"baking/exam"}],"collapsible":true,"collapsed":true},{"type":"category","label":"DeFi","items":[{"type":"link","label":"Introduction","href":"/defi","docId":"defi/introduction"},{"type":"link","label":"Token Standards","href":"/defi/token-standards","docId":"defi/token-standards"},{"type":"link","label":"Decentralized Exchanges","href":"/defi/dexs","docId":"defi/dexs"},{"type":"link","label":"Wrapped Assets","href":"/defi/wrapped-assets","docId":"defi/wrapped-assets"},{"type":"link","label":"Cross-chain Swaps","href":"/defi/cross-chain-swaps","docId":"defi/cross-chain-swaps"},{"type":"link","label":"On-chain Oracles","href":"/defi/oracles","docId":"defi/oracles"},{"type":"link","label":"Stablecoins","href":"/defi/stablecoins","docId":"defi/stablecoins"},{"type":"link","label":"Synthetics","href":"/defi/synthetics","docId":"defi/synthetics"},{"type":"link","label":"Lending and Flash Loans","href":"/defi/lending","docId":"defi/lending"},{"type":"link","label":"Exam","href":"/defi/exam","docId":"defi/exam"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Formal Verification","items":[{"type":"link","label":"Introduction","href":"/formal-verification","docId":"formal-verification/introduction"},{"type":"link","label":"Generalities","href":"/formal-verification/general","docId":"formal-verification/general"},{"type":"link","label":"Mi-Cho-Coq","href":"/formal-verification/michocoq","docId":"formal-verification/michocoq"},{"type":"link","label":"Formal verification on smart contracts","href":"/formal-verification/modeling-theorem","docId":"formal-verification/modeling-theorem"},{"type":"link","label":"Exam","href":"/formal-verification/exam","docId":"formal-verification/exam"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Private Blockchain","items":[{"type":"link","label":"Introduction","href":"/private","docId":"private/introduction"},{"type":"link","label":"Installation","href":"/private/installation","docId":"private/installation"},{"type":"link","label":"Genesis Bloc & Bootstrap Bakers","href":"/private/genesis","docId":"private/genesis"},{"type":"link","label":"Starting the blockchain","href":"/private/starting-blockchain","docId":"private/starting-blockchain"},{"type":"link","label":"Using the blockchain","href":"/private/using-blockchain","docId":"private/using-blockchain"},{"type":"link","label":"VPN Configuration","href":"/private/vpn","docId":"private/vpn"},{"type":"link","label":"Exam","href":"/private/exam","docId":"private/exam"}],"collapsible":true,"collapsed":true},{"type":"category","label":"How to contribute","items":[{"type":"link","label":"Introduction","href":"/contribute","docId":"contribute/introduction"},{"type":"link","label":"Report an issue","href":"/contribute/report-issue","docId":"contribute/report-issue"},{"type":"link","label":"Contribute to OpenTezos","href":"/contribute/opentezos","docId":"contribute/opentezos"},{"type":"link","label":"Contribute to the Tezos Core Protocol","href":"/contribute/tezos-core","docId":"contribute/tezos-core"},{"type":"link","label":"Receive a grant","href":"/contribute/grant","docId":"contribute/grant"},{"type":"link","label":"Become a baker or a delegator","href":"/contribute/baker","docId":"contribute/baker"},{"type":"link","label":"Exam","href":"/contribute/exam","docId":"contribute/exam"}],"collapsible":true,"collapsed":true}]},"docs":{"archetype/completium":{"id":"archetype/completium","title":"Completium","description":"CLI","sidebar":"docs"},"archetype/examples":{"id":"archetype/examples","title":"Contract Templates","description":"Tokens","sidebar":"docs"},"archetype/introduction":{"id":"archetype/introduction","title":"Introduction","description":"This section presents the Smart Contract language Archetype.","sidebar":"docs"},"archetype/raffle-example/raffle-contract":{"id":"archetype/raffle-example/raffle-contract","title":"Raffle contract","description":"This section presents the Archetype version of the raffle contract, presented as well in the other languages (Ligo, Smartpy). A raffle is a gambling game, where players buy tickets; a winning ticket is randomly picked and its owner gets the jackpot prize.","sidebar":"docs"},"archetype/raffle-example/unit-test":{"id":"archetype/raffle-example/unit-test","title":"Testing","description":"This section presents the testing of the raffle contract.","sidebar":"docs"},"baking/bakers_list":{"id":"baking/bakers_list","title":"List of bakers","description":"In this section, we will see how to find lists of bakers. As a delegator, we will see how to choose a baker.","sidebar":"docs"},"baking/baking_explained":{"id":"baking/baking_explained","title":"How baking works?","description":"In this section, we will discuss how baking works. The different actors of the mechanism and the technological solutions will be presented.","sidebar":"docs"},"baking/cli-baker":{"id":"baking/cli-baker","title":"CLI to become a baker","description":"In this chapter, we will see the CLI command lines for registering as a delegate. Then we will see how to exercise your rights as a baker, endorser, and accuser.","sidebar":"docs"},"baking/delegating":{"id":"baking/delegating","title":"Delegating","description":"In this chapter, we will see how to delegate your coins. We\'ll use command lines or simple wallets\' built-in options.","sidebar":"docs"},"baking/exam":{"id":"baking/exam","title":"Exam","description":"Question 1","sidebar":"docs"},"baking/introduction":{"id":"baking/introduction","title":"Introduction","description":"In this module, we will see how baking works for the Tezos blockchain. More precisely, we will see the different actors involved, from creating new blocks to their validation. We will then see the associated reward system, and how to deploy your own baker. Finally, we will present a list of existing bakers and the criteria to evaluate them.","sidebar":"docs"},"baking/reward":{"id":"baking/reward","title":"Rewards","description":"To maintain the network, Tezos needs bakers and endorsers. They stake their tokens and use their CPU, memory space and internet connection to create blocks, manage transactions, vote, and secure the network. In exchange for the completion of these tasks, bakers are rewarded with tokens from the transaction fees or tokens created by the network. Since the Carthage update, the reward system has been updated to make the network more robust against non-cooperative baking strategies.","sidebar":"docs"},"blockchain-basics/exam":{"id":"blockchain-basics/exam","title":"Exam","description":"Question 1","sidebar":"docs"},"blockchain-basics/introduction":{"id":"blockchain-basics/introduction","title":"Introduction","description":"Before we start digging into Tezos itself, let\'s review the basics of blockchain and cryptocurrencies. This module will present a brief history of the blockchain, its main components, consensus\' mechanisms and introduce the notion of smart contract (smart contracts will be more detailed in the dedicated chapter of the \\"Tezos Basics\\" module). All these notions will later be helpful in the following modules to understand how Tezos works and how it goes beyond Bitcoin and Ethereum to become part of a new generation of blockchains.","sidebar":"docs"},"blockchain-basics/main-properties":{"id":"blockchain-basics/main-properties","title":"Main properties of the first \\"blockchain\\"","description":"In this chapter, we will dig deeper into the main properties of the Bitcoin protocol, its developers, its P2P network, and a few basics of its economic structure.","sidebar":"docs"},"blockchain-basics/other-consensuses":{"id":"blockchain-basics/other-consensuses","title":"Introduction to other consensus algorithms","description":"In this chapter, we will briefly introduce some other public consensus mechanisms.","sidebar":"docs"},"blockchain-basics/proof-of-work":{"id":"blockchain-basics/proof-of-work","title":"Proof-of-work","description":"Proof-of-work was the first fully functional blockchain consensus mechanism ever created. It is still in use by Bitcoin and many other blockchains. It requires its users to mine to get a chance to earn a reward for validating blocks of transactions. In this chapter, we will look into the technical side of things and how mining works.","sidebar":"docs"},"blockchain-basics/smart-contracts":{"id":"blockchain-basics/smart-contracts","title":"Smart Contracts","description":"In this chapter, we\'re going to explain how and why Bitcoin\'s programming features are limited. We\'ll define what Smart Contracts are and how they are already present on Bitcoin. And finally, we\'ll define what Gas is and why it was introduced on Ethereum.","sidebar":"docs"},"contribute/baker":{"id":"contribute/baker","title":"Become a baker or a delegator","description":"Becoming a baker or a delegate on Tezos is a great way to contribute to the ecosystem while earning some profits. Baking (also called staking) is the process of forming new blocks on Tezos. This process is part of the Proof-of-Stake consensus (more on that in the Tezos basics module). The more bakers, the more decentralized and statistically safe this process is.","sidebar":"docs"},"contribute/exam":{"id":"contribute/exam","title":"Exam","description":"Question 1","sidebar":"docs"},"contribute/grant":{"id":"contribute/grant","title":"Receive a grant","description":"The Tezos Foundation goal is to develop the Tezos ecosystem, which includes offering grant programs. In this chapter, we\'ll take a closer look at how it works.","sidebar":"docs"},"contribute/introduction":{"id":"contribute/introduction","title":"Introduction","description":"Tezos is a user-centric blockchain. As seen in the governance chapter, its stakeholders\' evolution of Tezos is decided. Anyone can contribute, from reporting a simple issue to coding and developing a whole new platform based on Tezos; many opportunities will benefit you and the ecosystem. In this module, we will see how to:","sidebar":"docs"},"contribute/opentezos":{"id":"contribute/opentezos","title":"Contribute to OpenTezos","description":"The excellent website you are currently browsing is called OpenTezos and will later be merged with the upcoming wiki.tezos.com. It is, therefore, important that all the content here is up-to-date and error-free. If you see an error, you can either submit an issue or go a step further by actually correcting the mistake yourself and submitting it for review. Here is how to proceed:","sidebar":"docs"},"contribute/report-issue":{"id":"contribute/report-issue","title":"Report an issue","description":"The simplest way to contribute is to report issues you may encounter while using Tezos or its related platforms.","sidebar":"docs"},"contribute/tezos-core":{"id":"contribute/tezos-core","title":"Contribute to the Tezos Core Protocol","description":"The full source code of Tezos is available on gitlab.com/tezos. Tezos is written in OCaml, an industrial-strength programming language supporting functional, imperative and object-oriented styles [1]. OCaml is a functional programming language that offers speed, unambiguous syntax and semantics, and formal proofs of correctness.","sidebar":"docs"},"dapp/basics":{"id":"dapp/basics","title":"Frontend (Basics)","description":"So far, we have a deployed a contract and setup a wallet, we can now start to develop the frontend part of our Dapp. The frontend will interact with a deployed Raffle smart contract.","sidebar":"docs"},"dapp/exam":{"id":"dapp/exam","title":"Exam","description":"Question 1","sidebar":"docs"},"dapp/front_user_experience":{"id":"dapp/front_user_experience","title":"Frontend (Advanced)","description":"In the previous chapter, the basic usages of the Temple Wallet were covered. The React app that was developed is functional.","sidebar":"docs"},"dapp/introduction":{"id":"dapp/introduction","title":"Introduction","description":"One of the main features of blockchains is the decentralization: each transaction sent is verified by multiple nodes and its validation process does not rely on a single trusted third party.","sidebar":"docs"},"dapp/taquito":{"id":"dapp/taquito","title":"Taquito","description":"Interacting with the Tezos blockchain can be done using to the Tezos CLI. However, it is not suitable for Dapps since it needs to be integrated into web interfaces.","sidebar":"docs"},"dapp/temple":{"id":"dapp/temple","title":"Temple Wallet","description":"Dapp users need to sign transactions on the Dapp without disclosing their private keys. They want to be able to securely store their private keys, easily use and manage their addresses, and easily use the different Dapps. All of this can be performed by wallets. These can be desktop applications, browser extensions, hardware dongles or smart contracts themselves.","sidebar":"docs"},"dapp/truffle_compilation_migration":{"id":"dapp/truffle_compilation_migration","title":"Deploy with Truffle","description":"The first step to creating a Dapp is to deploy a smart contract on the Tezos network, whether for testing or real-life use. There are several ways to do this, such as using the Tezos CLI.","sidebar":"docs"},"defi/cross-chain-swaps":{"id":"defi/cross-chain-swaps","title":"Cross-chain Swaps","description":"Swap scenarios","sidebar":"docs"},"defi/dexs":{"id":"defi/dexs","title":"Decentralized Exchanges","description":"An exchange is a marketplace where coins and tokens are traded. The core function of an exchange is to ensure fair, orderly trading and the efficient dissemination of price information for everyone trading on the exchange. Exchanges give companies, traders, and crypto-enthusiasts a platform from which to sell and buy crypto-currencies publicly.","sidebar":"docs"},"defi/exam":{"id":"defi/exam","title":"Exam","description":"Question 1","sidebar":"docs"},"defi/introduction":{"id":"defi/introduction","title":"Introduction","description":"What is DeFi?","sidebar":"docs"},"defi/lending":{"id":"defi/lending","title":"Lending and Flash Loans","description":"In your life, you have probably had to borrow money, e.g., for a student loan, a car loan, or a mortgage. Lending and borrowing are essential services in any financial system. Traditionally, lenders such as banks, provide you with a loan in exchange for a fee in the form of an interest rate. Repaying the said loan is enforced by legal contracts with the bank.","sidebar":"docs"},"defi/oracles":{"id":"defi/oracles","title":"On-chain Oracles","description":"Definition","sidebar":"docs"},"defi/stablecoins":{"id":"defi/stablecoins","title":"Stablecoins","description":"A stablecoin is a cryptocurrency whose price is fixed to another asset. Most stablecoins are pegged (fixed) to fiat currencies (currencies issued by the central bank of a sovereign state) like the US Dollar.","sidebar":"docs"},"defi/synthetics":{"id":"defi/synthetics","title":"Synthetics","description":"Synthetics are contracts where two parties bet on opposite outcomes for the value of an asset and then split the difference in profit/loss. The actual asset is not purchased in this contract. Both parties simply bet on the value appreciating or depreciating.","sidebar":"docs"},"defi/token-standards":{"id":"defi/token-standards","title":"Token Standards","description":"In the Blockchain ecosystem, any digitally transferable asset between two people is called a token. Tokens can be native to a blockchain, e.g., BTC is the native token of Bitcoin or tokens can also be created and hosted on an existing blockchain via a smart contract. Some tokens, called stablecoins, follow the price of fiat currencies (e.g., USD, EUR). Others, called NFT, can represent collectables or art pieces. Finally, tokens can represent rights of ownership of real-world estates or companies (i.e., stock tokens). In this chapter, we will see the main types of token and the token standards on Tezos.","sidebar":"docs"},"defi/wrapped-assets":{"id":"defi/wrapped-assets","title":"Wrapped Assets","description":"Wrapped XTZ","sidebar":"docs"},"deploy-a-node/exam":{"id":"deploy-a-node/exam","title":"Exam","description":"Question 1","sidebar":"docs"},"deploy-a-node/installation":{"id":"deploy-a-node/installation","title":"Installation","description":"In this chapter, we will see how to install Tezos from the source with Unbuntu and macOS.","sidebar":"docs"},"deploy-a-node/introduction":{"id":"deploy-a-node/introduction","title":"Introduction","description":"This module will guide you through the complete installation and setup of your own Tezos node on Ubuntu and on Mac OS.","sidebar":"docs"},"deploy-a-node/networks":{"id":"deploy-a-node/networks","title":"What about networks?","description":"In this chapter, we will see how Tezos is multi-network. We will learn what the \\"main network\\" and the \\"test networks\\" are and finally, we will discover how to configure our node on a chosen network.","sidebar":"docs"},"deploy-a-node/set-up-a-node":{"id":"deploy-a-node/set-up-a-node","title":"Set-up a node","description":"In this chapter, we will see how to create and deploy your own node.","sidebar":"docs"},"deploy-a-node/to-go-further":{"id":"deploy-a-node/to-go-further","title":"To go further","description":"To go further on command lines and their possible applications, we invite you to browse the different chapters of OpenTezos dealing with this subject:","sidebar":"docs"},"explorer/available-tezos-indexers":{"id":"explorer/available-tezos-indexers","title":"Available Tezos Explorers","description":"Coming soon: A more in-depth comparison of all availables Tezos explorers.","sidebar":"docs"},"explorer/exam":{"id":"explorer/exam","title":"Exam","description":"Question 1","sidebar":"docs"},"explorer/indexer-explained":{"id":"explorer/indexer-explained","title":"How Indexers Work?","description":"This chapter aims to describe the functioning of a typical indexer and its components.","sidebar":"docs"},"explorer/introduction":{"id":"explorer/introduction","title":"Introduction","description":"This module focuses on blockchain explorers and blockchain indexers for Tezos,","sidebar":"docs"},"explorer/private-indexer":{"id":"explorer/private-indexer","title":"Private indexer","description":"The tools presented in this module so far are fully public: everyone can use them. However, they are meant","sidebar":"docs"},"explorer/tzstats-main-features":{"id":"explorer/tzstats-main-features","title":"How to use the tzStats blockchain explorer?","description":"In this chapter, we will use the TzStats explorer to illustrate the different features of an explorer, but similar features are usually available on others. Concerning the observation of smart contracts, the different aspects are discussed in the following chapter.","sidebar":"docs"},"explorer/tzstats-smart-contract":{"id":"explorer/tzstats-smart-contract","title":"Checkout your smart contract on TzStats","description":"As a developer, you will often want to check the state of your deployed smart contracts. Using a blockchain explorer is a fast and easy way to do so. In this section, we will find a smart contract and check it out on TzStats.","sidebar":"docs"},"formal-verification/exam":{"id":"formal-verification/exam","title":"Exam","description":"Question 1","sidebar":"docs"},"formal-verification/gadt-coq":{"id":"formal-verification/gadt-coq","title":"Coq, GADT and Mi-Cho-Coq","description":"To better understand formal verification, let\'s first describe the theory and tools behind the formal analysis."},"formal-verification/general":{"id":"formal-verification/general","title":"Generalities","description":"Formal verification is a complex task but made possible and easier on Tezos smart contracts with proof assistant tools (such as Coq) and Michelson conception choices.","sidebar":"docs"},"formal-verification/introduction":{"id":"formal-verification/introduction","title":"Introduction","description":"The Tezos blockchain has several advantages over its concurrents. One of them is the formal verification of smart contract. This module shows a brief overview of how Tezos smart contracts can be formally verified.","sidebar":"docs"},"formal-verification/michocoq":{"id":"formal-verification/michocoq","title":"Mi-Cho-Coq","description":"Introduction","sidebar":"docs"},"formal-verification/modeling-theorem":{"id":"formal-verification/modeling-theorem","title":"Formal verification on smart contracts","description":"This section describes how to bridge the Tezos world (and the Michelson language) with the formal world of Coq. For this, we are going to model a theorem representing a smart contract and its purpose (i.e. the goal of the smart contract).","sidebar":"docs"},"ligo/deploy-a-contract":{"id":"ligo/deploy-a-contract","title":"Compiling and deploying","description":"Compiling a contract","sidebar":"docs"},"ligo/exam":{"id":"ligo/exam","title":"Exam","description":"Question 1","sidebar":"docs"},"ligo/examples":{"id":"ligo/examples","title":"More examples","description":"Function","sidebar":"docs"},"ligo/installation":{"id":"ligo/installation","title":"Installation","description":"There are currently four ways to get started with LIGO. You can choose to use a Docker image, a static Linux binary, install packages for your Debian Linux distribution, or you can try directly on the online editor.","sidebar":"docs"},"ligo/introduction":{"id":"ligo/introduction","title":"Introduction","description":"Tezos smart contracts are written in Michelson, which is a stack-based language and the lowest level of language for a Tezos smart contract. Michelson code can be deployed as-is on the Tezos network.","sidebar":"docs"},"ligo/language-basics":{"id":"ligo/language-basics","title":"Language basics","description":"//////// CHAPTER REMOVED ////////"},"ligo/take-away":{"id":"ligo/take-away","title":"Take Away","description":"- LIGO is a programming language for writing Tezos smart contracts.","sidebar":"docs"},"ligo/unit-testing":{"id":"ligo/unit-testing","title":"Unit Testing with PyTezos","description":"There are multiple frameworks for testing Michelson contracts:","sidebar":"docs"},"ligo/write-contract-ligo/1-raffle-contract":{"id":"ligo/write-contract-ligo/1-raffle-contract","title":"Raffle contract","description":"The language used in smart contracts on Tezos is Michelson, a stack-based language. However, this kind of language is not commonly used by developers and as the code becomes complex and longer, it gets increasingly harder to keep readable and clean code in Michelson. However, the Tezos ecosystem provides a number of high level languages, which make smart contracts development as easy as any application development. LIGO is one of these languages.","sidebar":"docs"},"ligo/write-contract-ligo/2-launch-raffle":{"id":"ligo/write-contract-ligo/2-launch-raffle","title":"Launch raffle","description":"Smart Contract development: launch raffle entrypoint","sidebar":"docs"},"ligo/write-contract-ligo/3-buy-ticket":{"id":"ligo/write-contract-ligo/3-buy-ticket","title":"Buy ticket","description":"Smart Contract development: Buy ticket entrypoint","sidebar":"docs"},"ligo/write-contract-ligo/4-close-raffle":{"id":"ligo/write-contract-ligo/4-close-raffle","title":"Close raffle","description":"Smart Contract development: Close raffle entrypoint","sidebar":"docs"},"ligo/write-contract-ligo/5-refactoring":{"id":"ligo/write-contract-ligo/5-refactoring","title":"Refactoring","description":"Smart contract refactoring","sidebar":"docs"},"michelson/exam":{"id":"michelson/exam","title":"Exam","description":"Question 1","sidebar":"docs"},"michelson/examples":{"id":"michelson/examples","title":"Examples","description":"Example 1: Modulo with LOOP and IF","sidebar":"docs"},"michelson/instructions-reference":{"id":"michelson/instructions-reference","title":"Instructions Reference","description":"This chapter provides an explicit list of all the most commonly used instructions in Michelson. It intends to describe common Michelson instructions with a graphical illustration.","sidebar":"docs"},"michelson/introduction":{"id":"michelson/introduction","title":"Introduction","description":"To write smart contracts for Tezos, one can either choose the official low-level language called Michelson, or a high-level language, such as Archetype, LIGO or SmartPy, which compiles into Michelson.","sidebar":"docs"},"michelson/language-basics":{"id":"michelson/language-basics","title":"Language Basics","description":"OLD page - not to be displayed (this section has been merged in smart contract page)"},"michelson/smart-contracts":{"id":"michelson/smart-contracts","title":"Smart Contracts","description":"Smart contracts in Michelson","sidebar":"docs"},"michelson/take-away":{"id":"michelson/take-away","title":"Take away","description":"- Smart contracts in Tezos are implemented in the Michelson language which is a stack-based strongly-typed language.","sidebar":"docs"},"michelson/tutorial":{"id":"michelson/tutorial","title":"Tutorial","description":"This section introduces the main concepts of the Michelson language. It begins with the basics of stack manipulation then focuses on primitive types and more complex data structures. Finally the chapter focuses on specific features related to smart contracts concepts.","sidebar":"docs"},"private/exam":{"id":"private/exam","title":"Exam","description":"Question 1","sidebar":"docs"},"private/genesis":{"id":"private/genesis","title":"Genesis Bloc & Bootstrap Bakers","description":"Generating a new genesis public key and fetching binaries","sidebar":"docs"},"private/installation":{"id":"private/installation","title":"Installation","description":"Cloning the repository","sidebar":"docs"},"private/introduction":{"id":"private/introduction","title":"Introduction","description":"Tezos is a public blockchain network that includes innovative features such as on-chain governance and proof of stake. Smart contracts on Tezos are compiled to Michelson, a stack-based, functional language that lends itself to formal verification.","sidebar":"docs"},"private/starting-blockchain":{"id":"private/starting-blockchain","title":"Starting the blockchain","description":"Activating the procotol and starting the blockchain","sidebar":"docs"},"private/using-blockchain":{"id":"private/using-blockchain","title":"Using the blockchain","description":"Checking status","sidebar":"docs"},"private/vpn":{"id":"private/vpn","title":"VPN Configuration","description":"Creating a peer-to-peer network","sidebar":"docs"},"smartpy/exam":{"id":"smartpy/exam","title":"Exam","description":"Question 1","sidebar":"docs"},"smartpy/installation":{"id":"smartpy/installation","title":"Installation","description":"This chapter aims to prepare you and your working environment to be ready to code, test, and compile your smart contracts.","sidebar":"docs"},"smartpy/introduction":{"id":"smartpy/introduction","title":"Introduction","description":"This module aims to teach developers to write smart contracts with SmartPy. It will take the form of a course, illustrated through an example of a smart contract, to help the developer acquire the essentials to write, test, and analyze his smart contract.","sidebar":"docs"},"smartpy/write-contract-smartpy":{"id":"smartpy/write-contract-smartpy","title":"Smart contract development with SmartPy","description":"In this chapter, we will use SmartPy to develop a smart contract based Raffle and cover the most important aspects of the framework. We will use this opportunity to introduce new notions as they appear. For a complete reference of SmartPy, please refer to the Reference Manual.","sidebar":"docs"},"tezos-basics/cli-and-rpc":{"id":"tezos-basics/cli-and-rpc","title":"CLI and RPC","description":"In this chapter, the reader will learn how to install the official \\"tezos-client\\" and \\"tezos-admin-client\\" applications and run them using the Command Line Interface. These commands call on the remote procedures of a Tezos node (local or remote). There are many commands, but we\'ll see some examples.","sidebar":"docs"},"tezos-basics/economics-and-rewards":{"id":"tezos-basics/economics-and-rewards","title":"Economics and rewards","description":"In this chapter, we will dig deeper into the fees of the Tezos network and the baking and endorsing rewards. The calculations you\'ll learn about are helpful from the simplest transaction issuance to the most complex application built on Tezos. That is why it is important to understand the basics of fees and gas optimizations. Of course, this will be particularly useful if you are a baker or an endorser.","sidebar":"docs"},"tezos-basics/exam":{"id":"tezos-basics/exam","title":"Exam","description":"Question 1","sidebar":"docs"},"tezos-basics/governance-on-chain":{"id":"tezos-basics/governance-on-chain","title":"Governance on-chain","description":"Tezos is a self-amending blockchain network that incorporates an on-chain mechanism for proposing, selecting, testing, and activating protocol upgrades without needing to use hard forks [1].","sidebar":"docs"},"tezos-basics/history-of-amendments":{"id":"tezos-basics/history-of-amendments","title":"History of amendments","description":"As presented in the Governance on-chain chapter, the Tezos blockchain is constantly evolving, through new amendments. In this chapter, we will present an overview of past proposals and the reasons for their approval or disapproval.","sidebar":"docs"},"tezos-basics/introduction":{"id":"tezos-basics/introduction","title":"Introduction","description":"Tezos is a public, open-source blockchain protocol relying on a low power consumption and energy-efficient consensus.","sidebar":"docs"},"tezos-basics/liquid-proof-of-stake":{"id":"tezos-basics/liquid-proof-of-stake","title":"Liquid Proof-of-Stake","description":"In \\"Blockchain Basics\\" module, you understood that the main objective of a consensus mechanism is maintaining a common history throughout the whole peer-to-peer network. There are countless consensus algorithms, and they all have their pros and cons. Notably, Bitcoin\'s Proof-of-Work has two major flaws:","sidebar":"docs"},"tezos-basics/operations":{"id":"tezos-basics/operations","title":"Operations","description":"This chapter introduces the notion of Operations on Tezos. These are more commonly known as Transactions on other blockchains and in Tezos are a subset of operations. On Tezos, transactions are transfers of tokens and smart contracts calls. A few examples of operations that are not transactions on Tezos: Originations; endorsements; proposals; ballots...","sidebar":"docs"},"tezos-basics/smart-contracts":{"id":"tezos-basics/smart-contracts","title":"Smart contracts","description":"In this chapter, you will learn the basics of Tezos smart contracts. Their components and the workflow to deploy and use them on the Tezos blockchain.","sidebar":"docs"},"tezos-basics/voting":{"id":"tezos-basics/voting","title":"Voting","description":"In this chapter, we will have a brief overview of the voting process. We will also see different commands that allow a delegate to make a proposal and vote.","sidebar":"docs"},"welcome/modules":{"id":"welcome/modules","title":"Welcome to OpenTezos","description":"Welcome Tezos Developers! Explore the technical and economic concepts behind the Tezos Network, experiment with our tutorials, or start building your own Tezos Dapp. Each module will teach you a full concept of Tezos, ending with a quiz that will get you an official completion certification if you succeed.","sidebar":"docs"},"welcome/paths":{"id":"welcome/paths","title":"Paths","description":"Choose your own path","sidebar":"docs"}}}')}}]);